9.18 LAB: Even/odd values in a vector
Write a program that reads a list of integers, and outputs whether the list contains all even numbers, odd numbers, or neither. The input begins with an integer indicating the number of integers that follow.

Ex: If the input is 5 2 4 6 8 10, the output is:
all even

Ex: If the input is 5 1 3 5 7 9, the output is:
all odd

Ex: If the input is 5 1 2 3 4 5, the output is:
not even or odd

Your program must define and call the following two functions. IsVectorEven returns true if all integers in the array are even and false otherwise. IsVectorOdd returns true if all integers in the array are odd and false otherwise.
bool IsVectorEven(vector<int> myVec)
bool IsVectorOdd(vector<int> myVec)


#include<iostream>
#include<vector>

using namespace std;

/* Define your function here */
bool IsVectorEven(vector<int> userVec);
bool IsVectorOdd(vector<int> userVec);

int main(){
/* Type your code here. */

   int totalNum = 0;
   int userNum = 0;
   
   vector<int> vectorList;
   
   cin >> userNum;
   for (int i = 0; i < userNum; i++) {
      cin >> totalNum;
      vectorList.push_back(totalNum);
   }
   if (IsVectorEven(vectorList) == true){
      cout << "all even" << endl;
   }
   else if (IsVectorOdd(vectorList) == true) {
      cout << "all odd" << endl;
   }
   else {
      cout << "not even or odd" << endl;
   }
   return 0;
}

bool IsVectorEven(vector<int> userVec) {
   unsigned int j = 0;
   for (unsigned int i = 0; i < userVec.size(); i++) {
      if (userVec.at(i) % 2==0)
         j++;
   }
   if (j == userVec.size()) {
         return true;
   }
   else {
      return false;
   }
}

bool IsVectorOdd(vector<int> userVec) {
   unsigned int x = 0;
   for (unsigned int y = 0; y < userVec.size(); y++) {
      if (userVec.at(y) % 2 != 0)
         x++;
   }
   if (x == userVec.size()) {
       return true;
   }
   else {
      return false;
   }
}
    
